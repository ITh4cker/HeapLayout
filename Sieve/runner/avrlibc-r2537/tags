!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
HEAP_SIZE	avrmalloc.c	52;"	d	file:
__brkval	avrmalloc.c	/^char *__brkval;$/;"	v
__flp	avrmalloc.c	/^struct __freelist *__flp;$/;"	v	typeref:struct:__freelist
__freelist	avrmalloc.c	/^struct __freelist {$/;"	s	file:
__malloc_heap_end	avrmalloc.c	/^char *__malloc_heap_end = heap + HEAP_SIZE;$/;"	v
__malloc_heap_start	avrmalloc.c	/^char *__malloc_heap_start = heap;$/;"	v
__malloc_margin	avrmalloc.c	/^size_t __malloc_margin = 32;$/;"	v
calloc	avrmalloc.c	/^calloc(size_t nmemb, size_t size)$/;"	f
count_exclusive_captures	avrmalloc.c	/^void count_exclusive_captures(size_t s1, size_t s2, size_t *r) {$/;"	f
count_holes	avrmalloc.c	/^void count_holes(size_t v, size_t *count, size_t *space) {$/;"	f
free	avrmalloc.c	/^free(void *p)$/;"	f
heap	avrmalloc.c	/^char heap[HEAP_SIZE] = {0};$/;"	v
malloc	avrmalloc.c	/^malloc(size_t len)$/;"	f
nx	avrmalloc.c	/^	struct __freelist *nx;$/;"	m	struct:__freelist	typeref:struct:__freelist::__freelist	file:
realloc	avrmalloc.c	/^realloc(void *p, size_t size)$/;"	f
sz	avrmalloc.c	/^	size_t sz;$/;"	m	struct:__freelist	file:
